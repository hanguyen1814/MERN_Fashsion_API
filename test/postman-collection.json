{
    "info": {
        "name": "Security Tests",
        "description": "Collection để test các chức năng bảo mật",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "variable": [
        {
            "key": "baseUrl",
            "value": "http://localhost:4000/api"
        },
        {
            "key": "accessToken",
            "value": ""
        },
        {
            "key": "refreshToken",
            "value": ""
        }
    ],
    "item": [
        {
            "name": "1. Security Headers",
            "item": [
                {
                    "name": "Health Check - Check Headers",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "http://localhost:4000/health",
                            "protocol": "http",
                            "host": [
                                "localhost"
                            ],
                            "port": "4000",
                            "path": [
                                "health"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('X-Powered-By header should be hidden', function () {",
                                    "    pm.expect(pm.response.headers.get('X-Powered-By')).to.be.undefined;",
                                    "});",
                                    "",
                                    "pm.test('Content Security Policy should be set', function () {",
                                    "    pm.expect(pm.response.headers.get('Content-Security-Policy')).to.not.be.undefined;",
                                    "});",
                                    "",
                                    "pm.test('X-Frame-Options should be set', function () {",
                                    "    pm.expect(pm.response.headers.get('X-Frame-Options')).to.not.be.undefined;",
                                    "});"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "2. Authentication",
            "item": [
                {
                    "name": "Register User",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"fullName\": \"Test User\",\n  \"email\": \"test@example.com\",\n  \"password\": \"TestPass123\",\n  \"phone\": \"0123456789\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/auth/register",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "auth",
                                "register"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Registration should succeed', function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Login User",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"TestPass123\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/auth/login",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "auth",
                                "login"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Login should succeed', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "    pm.expect(pm.response.json().data.accessToken).to.not.be.undefined;",
                                    "    pm.expect(pm.response.json().data.refreshToken).to.not.be.undefined;",
                                    "});",
                                    "",
                                    "pm.test('Secure cookies should be set', function () {",
                                    "    const cookies = pm.response.headers.get('Set-Cookie');",
                                    "    pm.expect(cookies).to.include('HttpOnly');",
                                    "});",
                                    "",
                                    "if (pm.response.json().data.accessToken) {",
                                    "    pm.collectionVariables.set('accessToken', pm.response.json().data.accessToken);",
                                    "    pm.collectionVariables.set('refreshToken', pm.response.json().data.refreshToken);",
                                    "}"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Refresh Token",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/auth/refresh",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "auth",
                                "refresh"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Refresh token should succeed', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "    pm.expect(pm.response.json().data.accessToken).to.not.be.undefined;",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Logout",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/auth/logout",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "auth",
                                "logout"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Logout should succeed', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "3. RBAC Tests",
            "item": [
                {
                    "name": "Unauthorized Access",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/users",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "users"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Should return 401 Unauthorized', function () {",
                                    "    pm.response.to.have.status(401);",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Customer - Access Own Profile",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/users/profile/me",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "users",
                                "profile",
                                "me"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Customer should access own profile', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Customer - Access All Users (Should Fail)",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{accessToken}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/users",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "users"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Customer should not access all users', function () {",
                                    "    pm.response.to.have.status(403);",
                                    "});"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "4. Input Validation",
            "item": [
                {
                    "name": "Invalid Email Registration",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"fullName\": \"Test User\",\n  \"email\": \"invalid-email\",\n  \"password\": \"TestPass123\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/auth/register",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "auth",
                                "register"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Should reject invalid email', function () {",
                                    "    pm.response.to.have.status(400);",
                                    "    pm.expect(pm.response.json().error.details).to.be.an('array');",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Weak Password Registration",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"fullName\": \"Test User\",\n  \"email\": \"test2@example.com\",\n  \"password\": \"weak\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/auth/register",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "auth",
                                "register"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Should reject weak password', function () {",
                                    "    pm.response.to.have.status(400);",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Invalid Phone Registration",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"fullName\": \"Test User\",\n  \"email\": \"test3@example.com\",\n  \"password\": \"TestPass123\",\n  \"phone\": \"invalid-phone\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/auth/register",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "auth",
                                "register"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Should reject invalid phone', function () {",
                                    "    pm.response.to.have.status(400);",
                                    "});"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "5. Data Sanitization",
            "item": [
                {
                    "name": "XSS Protection Test",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"fullName\": \"<script>alert('XSS')</script>\",\n  \"email\": \"xss@example.com\",\n  \"password\": \"TestPass123\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/auth/register",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "auth",
                                "register"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('XSS payload should be sanitized or rejected', function () {",
                                    "    const responseText = pm.response.text();",
                                    "    pm.expect(responseText).to.not.include('<script>');",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "NoSQL Injection Test",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"email\": {\"$ne\": null},\n  \"password\": {\"$ne\": null}\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/auth/login",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "auth",
                                "login"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('NoSQL injection should be blocked', function () {",
                                    "    pm.expect(pm.response.code).to.be.oneOf([400, 401]);",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Parameter Pollution Test",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/products?page=1&page=2&limit=10&limit=20",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "products"
                            ],
                            "query": [
                                {
                                    "key": "page",
                                    "value": "1"
                                },
                                {
                                    "key": "page",
                                    "value": "2"
                                },
                                {
                                    "key": "limit",
                                    "value": "10"
                                },
                                {
                                    "key": "limit",
                                    "value": "20"
                                }
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Parameter pollution should be handled', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "    // Check that only one value per parameter is processed",
                                    "});"
                                ]
                            }
                        }
                    ]
                }
            ]
        }
    ]
}